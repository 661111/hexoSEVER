// ************************************************ 函数部分 **************************************************************
const marqueeContainer1 = document.getElementById('console-music-title');
const marqueeContent1 = document.getElementById('console-music-title-text');
const marqueeContainer2 = document.getElementById('console-music-author');
const marqueeContent2 = document.getElementById('console-music-author-text');
document.addEventListener('DOMContentLoaded', () => { 
  const ap = new APlayer({ 
    container: document.querySelector(".global-music .aplayer"),
    fixed: true,
    lrcType: 3,
    volume: 0.7,
    mutex: true,
    audio: Defaultsheet 
  }); 
  document.querySelector(".global-music").aplayer = ap;
}); 

// *************************************************** 控制模块 ***************************************************************
var ctrl = {
  GlobalTheme(e) {
      console.log(`changed to ${e.matches ? "dark" : "light"} mode`);
      if (e.matches) {
          activateDarkMode();
          document.querySelector("#set-theme-dark input").checked = true;
          saveToLocal.set('theme', 'dark', 2);
      } else {
          activateLightMode();
          document.querySelector("#set-theme-light input").checked = true;
          saveToLocal.set('theme', 'light', 2);
      }
  },

  // 深色模式
  switchDarkMode() {
      const nowMode = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light';
      if (nowMode === 'light') {
          document.getElementById("set-theme-dark").click();
      } else {
          document.getElementById("set-theme-light").click();
      }
      typeof utterancesTheme === 'function' && utterancesTheme();
      typeof changeGiscusTheme === 'function' && changeGiscusTheme();
      typeof FB === 'object' && window.loadFBComment();
      typeof runMermaid === 'function' && window.runMermaid();
  },

  // 显示中控台
  showConsole() {
      document.getElementById("console-music-item-main").classList.add("item-show");
      document.getElementById("console").classList.add("show");
      ctrl.initConsoleState();
  },

  // 隐藏中控台
  hideConsole() {
      var items = document.querySelectorAll(".item-show");
      for (let i = 0; i < items.length; i++) items[i].classList.remove("item-show");
      document.getElementById("console").classList.remove("show");
      document.body.style.overflow = '';
  },

  // 菜单返回
  consoleBackBtn() {
      var top_item = document.querySelectorAll(".item-show");
      if (top_item.length > 0) {
          if (top_item.length == 1) {
              switch (top_item[0].id) {
                  case 'console-music-item-mini': break;
                  case 'console-music-item-main': ctrl.hideConsole(); break;
                  case 'console-music-item-list':
                      top_item[0].classList.remove("item-show");
                      document.getElementById("console-music-item-main").classList.add("item-show");
                      break;
                  case 'console-songsheet-item-list':
                      top_item[0].classList.remove("item-show");
                      document.getElementById("console-music-item-list").classList.add("item-show");
                      break;
                  default: console.log("异常情况");
              }
          } else {
              top_item[top_item.length - 1].classList.remove("item-show");
              // if (top_item.length == 2) {
              //     document.querySelector("#console .console-btn-group").style.opacity = 1;
              //     document.querySelector("#console .console-btn-group").style.pointerEvents = 'all';            
              // }
          }
      }
  },

  // 桌面歌词
  lrcShowHide() {
      var a = document.querySelector(".global-music .aplayer-lrc");
      var b = document.getElementById("lrcItem");
      if (a && b) {
          if (!a.classList.contains("aplayer-lrc-hide")) {
              a.classList.add("aplayer-lrc-hide");
              b.classList.remove("on");
              localStorage.setItem('lrc_state', false);
              if (set_notice.checked) tools.showMessage("桌面歌词已关闭", "success", 2);
          } else {
              a.classList.remove("aplayer-lrc-hide");
              b.classList.add("on");
              localStorage.setItem('lrc_state', true);
              if (set_notice.checked) tools.showMessage("桌面歌词已打开", "success", 2);
          }
      }
  },

  // 单栏显示
  hideAsideBtn() {
      const $htmlDom = document.documentElement.classList;
      if ($htmlDom.contains('hide-aside')) {
          saveToLocal.set('aside-status', 'show', 2);
          document.getElementById("asideItem").classList.remove("on");
          if (set_notice.checked) tools.showMessage("侧边栏已启用", "success", 2);
      } else {
          saveToLocal.set('aside-status', 'hide', 2);
          document.getElementById("asideItem").classList.add("on");
          if (set_notice.checked) tools.showMessage("侧边栏已隐藏", "success", 2);
      }
      $htmlDom.toggle('hide-aside');
  },

  settingsOpen() {
      alert("开发中...敬请期待！");
  },

  musicForward() {
      document.querySelector(".global-music").aplayer.skipForward();
      ctrl.getMusicInfo();
  },

  musicBackward() {
      document.querySelector(".global-music").aplayer.skipBack();
      ctrl.getMusicInfo();
  },

  // 获取歌曲信息
  getMusicInfo() {
      var music_id = document.querySelector(".global-music").aplayer.list.index; // 当前曲目的id
      var music_cover = document.querySelector(".global-music").aplayer.list.audios[music_id].cover;
      var music_author = document.querySelector(".global-music").aplayer.list.audios[music_id].author;
      // var music_author = document.querySelector(".global-music").aplayer.list.audios[music_id].artist;
      var music_title = document.querySelector(".global-music").aplayer.list.audios[music_id].title;
      // var music_title = document.querySelector(".global-music").aplayer.list.audios[music_id].name;
      document.getElementById("console-music-cover").innerHTML = "<img src='" + music_cover + "'>";// 歌曲信息
      document.querySelector("#console-music-item-main .cover-shadow").style.background =  "url('" + music_cover + "') center center / 100% 100% no-repeat";
      document.getElementById("console-music-title-text").innerHTML = music_title;
      document.getElementById("console-music-author-text").innerHTML = music_author;
      ctrl.marqueeMusicInfo();
  },

  refreshProgress() {
      var nowTime = document.querySelector(".global-music").aplayer.audio.currentTime;// 当前时间
      if (isNaN(nowTime)) nowTime = 0;
      var nowTimeString = tools.secToTime(nowTime);
      var allTime = document.querySelector(".global-music").aplayer.audio.duration;// 总时间
      if (isNaN(allTime)) allTime = 0; // 无歌曲时会返回NaN
      var allTimeString = tools.secToTime(allTime);
      document.getElementById("progress-low-btn").innerHTML = nowTimeString;// 进度条时间
      document.getElementById("progress-high-btn").innerHTML = allTimeString;
      document.getElementById("p_bar").style.transform = "translateX(-" + (1 - (nowTime / allTime)) * 100 + "%)";// 进度条进度
  },

  // 导入歌单
  importMusicList() {
      var audios = document.querySelector(".global-music").aplayer.list.audios;
      var list_html;
      for (let i = 0; i < audios.length; i++) {
          list_html = document.getElementById("console-music-list").innerHTML;
          // document.getElementById("console-music-list").innerHTML = list_html + "<li class='music-list-item'><div class='list-music-info1'><a class='list-music-id' data-pjax-state=''>" + (i + 1) + "</a><a class='list-music-state' data-pjax-state=''><i class='iconfont icon-waveform'></i></a></div><div class='list-music-info2'><a class='list-music-title' data-pjax-state=''>" + audios[i].title + "</a><a class='list-music-author' data-pjax-state=''>&nbsp;-&nbsp;" + audios[i].author + "</a></div></li>";
          document.getElementById("console-music-list").innerHTML = list_html + "<li class='music-list-item'><div class='list-music-info1'><a class='list-music-id' data-pjax-state=''>" + (i + 1) + "</a><a class='list-music-state' data-pjax-state=''><i class='iconfont icon-waveform'></i></a></div><div class='list-music-info2'><a class='list-music-title' data-pjax-state=''>" + audios[i].name + "</a><a class='list-music-author' data-pjax-state=''>&nbsp;-&nbsp;" + audios[i].artist + "</a></div></li>";
      }
  },

  // 歌单切换
  changeMusicList(Music_id, Music_server) {
      var ap = document.querySelector(".global-music").aplayer;
      var music_list_url_str = "https://metingjs.cancin.cn/api?server=" + Music_server + "&type=playlist" + "&id=" + Music_id;
      ap.list.clear();
      fetch(music_list_url_str).then(response => response.json()).then(data => {
          // 在这里使用返回的JSON数据
          newSongsheetLen = data.length;
          console.log("本专辑有" + newSongsheetLen + "首歌曲");
          ap.list.add(data);
      })
          .catch(error => console.error(error));
  },

  JayMusicList() {
      var ap = document.querySelector(".global-music").aplayer;
      ap.list.clear();
      console.log("本专辑有" + JaySongsheet.length + "首歌曲");
      ap.list.add(JaySongsheet);
  },

  JokerMusicList() {
      var ap = document.querySelector(".global-music").aplayer;
      ap.list.clear();
      console.log("本专辑有" + QianSongsheet.length + "首歌曲");
      ap.list.add(QianSongsheet);
  },

  // 音乐状态检测（已添加事件监听器，修复点击aplayer后导航栏和控制中心不同步的问题）
  musicState() {
      var music_state = document.querySelector(".global-music").aplayer.audio.paused;
      var a = document.querySelector("#music-Switch i");
      var b = document.querySelector("#music-ctrl-btn-center i");
      if (music_state) {
          a.classList.remove("icon-pause");
          a.classList.add("icon-play");
          b.classList.remove("icon-pause");
          b.classList.add("icon-play");
      } else {
          a.classList.remove("icon-play");
          a.classList.add("icon-pause");
          b.classList.remove("icon-play");
          b.classList.add("icon-pause");
      }
  },

  clearConsoleMusicList() {
      document.getElementById("console-music-list").innerHTML = ''
  },

  addMusicToList(title, author, url, pic, lrc) {
      var ap = document.querySelector(".global-music").aplayer;
      ctrl.clearConsoleMusicList();
      // ap.list.clear();
      ap.list.add([{title: title, author: author, url: url, pic: pic, lrc: lrc}]);
      ap.list.switch(ap.list.audios.length - 1)
  },

  mcToggleMusic(id, url) {
      const mc = document.getElementById(id)
      if (mc) {
          const c = mc.querySelector(".content")
          if (!c.classList.contains("canplay")) {
              const a = mc.querySelector(".audio")
              a.src = url
              a.addEventListener('loadeddata', function f() {
                  c.classList.add("canplay")
                  a.removeEventListener('loadeddata', f)
              });
          }
          const mc_audio = mc.querySelector(".audio")
          if (mc_audio.paused) {
              mc_audio.play()
          } else {
              mc_audio.pause()
          }
      }
  },

  mcRefreshTime(id) {
      var mc = document.getElementById(id)
      if (mc) {
          var mc_audio = mc.querySelector(".audio")
          var t0 = mc_audio.currentTime + 0.5
          var t1 = mc_audio.duration
          var _t0 = tools.secToTime(t0)
          var _t1 = tools.secToTime(t1)
          mc.querySelector(".time").innerHTML = `${_t0}&nbsp;/&nbsp;${_t1}`
          mc.querySelector(".mc-progressbar").style.transform = "translateX(-" + ((1 - (t0 / t1)) * 100) + "%)"
      }
  },

  marqueeMusicInfo() {
      if (marqueeContent1.offsetWidth > marqueeContainer1.offsetWidth) {
          // marqueeContent1.style.animation = 'marquee-1 10s linear infinite'
          var speed = marqueeContent1.offsetWidth / marqueeContainer1.offsetWidth * 6
          marqueeContent1.style.animation = 'marquee-1 ' + speed + 's linear infinite'
      } else {
          marqueeContent1.style.animation = ''
      }
      if (marqueeContent2.offsetWidth > marqueeContainer2.offsetWidth) {
          // marqueeContent2.style.animation = 'marquee-1 10s linear infinite'
          var speed = marqueeContent2.offsetWidth / marqueeContainer2.offsetWidth * 6
          marqueeContent2.style.animation = 'marquee-1 ' + speed + 's linear infinite'
      } else {
          marqueeContent2.style.animation = ''
      }
  },

  // 初始化console图标
  initConsoleState() {
      var lrc = document.querySelector(".aplayer > .aplayer-lrc-hide");
      var aplayer = document.querySelector(".aplayer > .aplayer-lrc");
      lrc === null && aplayer != null
        ? document.getElementById("lrcItem").classList.add("on")
        : document.getElementById("lrcItem").classList.remove("on");
      saveToLocal.get('aside-status') === 'hide'
        ? document.getElementById("asideItem").classList.add("on")
        : document.getElementById("asideItem").classList.remove("on");
      var console_musicBody = document.querySelector("#console .console-mainbox"); // 更新控制中心尺寸
      var console_musicCover = document.getElementById("console-music-cover");
      console_musicCover.style.height = console_musicCover.offsetWidth + "px";
      console_musicBody.style.height = (console_musicCover.offsetWidth + 236) + "px"; //(12rem + 1.3rem + 1.3rem) * 16 = 233.6px
      ctrl.getMusicInfo();
      var nowVolume = document.querySelector(".global-music").aplayer.audio.volume;// 当前音量
      document.getElementById("v_bar").style.transform = "translateX(-" + (1 - nowVolume) * 100 + "%)";// 音量条进度
      saveToLocal.get('theme') == 'light' ? document.querySelector("#set-theme-light input").checked = true : document.querySelector("#set-theme-dark input").checked = true;
  },
}

// ******************************************************** 监听器 *******************************************************************
// 主页/音乐列表/歌单列表/设置 切换
var music_list_switch = document.getElementById("music-ctrl-btn-end");
var music_list_title = document.getElementById("music-list-title");
var settings_btn = document.querySelector("#console .settings-btn");
var to_display = document.getElementById("li-set-display");
var to_tools = document.getElementById("li-set-tools");
var to_about = document.getElementById("li-set-about");
// var to_wallpaper = document.querySelector("#li-set-wallpaper .setting-next");
// var setting_info1 = document.getElementById("console-setting-info1");
// var setting_title1 = setting_info1.querySelector(".setting-title");
// var setting_info2 = document.getElementById("console-setting-info2");
// var setting_title2 = setting_info2.querySelector(".setting-title");
// var setting_info3 = document.getElementById("console-setting-info3");
// var setting_title3 = setting_info3.querySelector(".setting-title");
music_list_switch.addEventListener("click", () => {
  // document.getElementById("console-music-item-main").classList.remove("item-show");
  document.getElementById("console-music-item-list").classList.add("item-show");
  // if (document.querySelector('li.music-list-item.current-play')) {document.querySelector('li.music-list-item.current-play').scrollIntoView({ behavior: 'smooth' });}
});
music_list_title.addEventListener("click", () => {
  // document.getElementById("console-music-item-list").classList.remove("item-show");
  document.getElementById("console-songsheet-item-list").classList.add("item-show");
});
// 歌单列表监听器
const songsheets = [
  { id: "songsheet-1", text: "<i class='blogfont icon-spinner'></i> 周杰伦", flag: 1, func: () => ctrl.JayMusicList() },
  { id: "songsheet-2", text: "<i class='blogfont icon-spinner'></i> 薛之谦/李荣浩", flag: 1, func: () => ctrl.JokerMusicList() },
  { id: "songsheet-3", text: "<i class='blogfont icon-spinner'></i> 纯音乐", flag: 1, func: () => ctrl.changeMusicList("8167030216", "netease") },
  { id: "songsheet-4", text: "<i class='blogfont icon-spinner'></i> 外语", flag: 1, func: () => ctrl.changeMusicList("8658340188", "netease") },
  { id: "songsheet-5", text: "<i class='blogfont icon-spinner'></i> 古风", flag: 1, func: () => ctrl.changeMusicList("8167066222", "netease") },
  { id: "songsheet-6", text: "<i class='blogfont icon-spinner'></i> 默认歌单", flag: 1, func: () => ctrl.changeMusicList("8086610771", "netease") }
];
songsheets.forEach((songsheet, index) => {
  const element = document.getElementById(songsheet.id);
  element.addEventListener("click", () => {
      document.getElementById("console-loading-icon").classList.add("show");
      console.log(`正在切换至${songsheet.text}专辑`);
      global_music_flag = songsheet.flag;
      songsheet.func();
      document.getElementById("music-list-title").innerHTML = songsheet.text;
      ctrl.consoleBackBtn();
  });
});

var addSongsheet = document.getElementById("songsheet-add");
addSongsheet.addEventListener("click", () => {
  console.log("自定义专辑");
  if (set_notice.checked) tools.showNote("有空再写吧", "warning", 3)
});


// 音乐列表监听器
var console_music_list = document.getElementById("console-music-list");
var music_id = null;
console_music_list.addEventListener('click', function (e) {
  var ap = document.querySelector(".global-music").aplayer
  if (e.target && e.target.nodeName.toUpperCase() == "LI") {
      music_id = parseInt(e.target.querySelector(".list-music-id").innerHTML);
      ap.list.switch(music_id - 1);
      ap.play();
      ctrl.getMusicInfo();
  } else if (e.target && e.target.nodeName.toUpperCase() == "DIV") {
      music_id = parseInt(e.target.parentElement.querySelector(".list-music-id").innerHTML);
      ap.list.switch(music_id - 1);
      ap.play();
      ctrl.getMusicInfo();
  } else if (e.target && (e.target.nodeName.toUpperCase() == "A" || e.target.nodeName.toUpperCase() == "I")) {
      music_id = parseInt(e.target.parentElement.parentElement.querySelector(".list-music-id").innerHTML);
      ap.list.switch(music_id - 1);
      ap.play();
      ctrl.getMusicInfo();
  } else alert("ERROR!")
}, false);

// 滚动条显示
// var set_scroll = document.querySelector("#set-switch-scroll input");
// set_scroll.addEventListener("change", () => {
//     if (set_scroll.checked) {
//         localStorage.setItem('scroll_state', true);
//         if (set_notice.checked) tools.showMessage("滚动条显示已打开", "success", 2);
//     } else {
//         localStorage.setItem('scroll_state', false);
//         if (set_notice.checked) tools.showMessage("滚动条显示已关闭", "success", 2);
//     }
// });

// 音量条监听器
var music_volumebar = document.getElementById("music-volumebar"); //扩大热区
var v_bar_bg = document.getElementById("v_bar_bg");
var v_bar = document.getElementById("v_bar");
var v_low = document.getElementById("volume-low-btn");
var v_high = document.getElementById("volume-high-btn");
var v_bar_bg_Len = v_bar_bg.offsetWidth; // 获取进度条总长Width

// 按键按下
music_volumebar.addEventListener("mousedown", function (e) { //添加监听事件
  v_bar_bg.style.height = "0.8rem";
  v_bar.style.backgroundColor = "var(--dis-f-0)";
  v_low.style.color = "var(--dis-f-0)";
  v_high.style.color = "var(--dis-f-0)";
  let x = e.clientX; // 获取按下时鼠标初始位置 // pageX是绝对位置 offsetX是相对位置
  let v_bar_Len = v_bar.getBoundingClientRect().right - v_bar_bg.getBoundingClientRect().left; // 获取进度条的初始Width
  v_bar_bg_Len = v_bar_bg.offsetWidth;
  let newVolume = (x - v_bar_bg.getBoundingClientRect().left) / v_bar_bg_Len;
  v_bar.style.transform = "translateX(-" + (1 - newVolume) * 100 + "%)"; // 按下时重新设置进度条
  const v = document.querySelector(".global-music");
  v.aplayer.volume(newVolume, true); // 更改音量
  document.onmousemove = function (e) { // 拖动需要写到down里面
      let diff = x - e.clientX; // 获取移动的距离
      let v_bar_Len_New = v_bar_Len - diff; // 计算当前进度条的Width
      if (v_bar_Len_New < 0) { // 当超出进度条范围，控制
          v_bar_Len_New = 0;
      } else if (v_bar_Len_New > v_bar_bg_Len) {
          v_bar_Len_New = v_bar_bg_Len;
      }
      // v_bar.style.transform = "translateX(-" + (1 - (v_bar_Len_New / v_bar_bg_Len)) * 100 + "%)"; // 更改进度条Width
      newVolume = v_bar_Len_New / v_bar_bg_Len;
      v_bar.style.transform = "translateX(-" + (1 - newVolume) * 100 + "%)"
      v.aplayer.volume(newVolume, true); // 更改音量
  }
});

// 触摸按下
music_volumebar.addEventListener("touchstart", function (e) { //添加监听事件
  v_bar_bg.style.height = "0.8rem";
  v_bar.style.backgroundColor = "var(--dis-f-0)";
  v_low.style.color = "var(--dis-f-0)";
  v_high.style.color = "var(--dis-f-0)";
  let x = e.targetTouches[0].pageX; // 获取按下时鼠标初始位置 // pageX是绝对位置 offsetX是相对位置
  let v_bar_Len = v_bar.getBoundingClientRect().right - v_bar_bg.getBoundingClientRect().left; // 获取进度条的初始Width
  v_bar_bg_Len = v_bar_bg.offsetWidth;
  let newVolume = (x - v_bar_bg.getBoundingClientRect().left) / v_bar_bg_Len;
  v_bar.style.transform = "translateX(-" + (1 - newVolume) * 100 + "%)"; // 按下时重新设置进度条
  const v = document.querySelector(".global-music");
  v.aplayer.volume(newVolume, true); // 更改音量
  document.ontouchmove = function (e) { // 拖动需要写到down里面
      let diff = x - e.targetTouches[0].pageX; // 获取移动的距离
      let v_bar_Len_New = v_bar_Len - diff; // 计算当前进度条的Width
      if (v_bar_Len_New < 0) { // 当超出进度条范围，控制
          v_bar_Len_New = 0;
      } else if (v_bar_Len_New > v_bar_bg_Len) {
          v_bar_Len_New = v_bar_bg_Len;
      }
      // v_bar.style.transform = "translateX(-" + (1 - (v_bar_Len_New / v_bar_bg_Len)) * 100 + "%)"; // 更改进度条Width
      newVolume = v_bar_Len_New / v_bar_bg_Len;
      v_bar.style.transform = "translateX(-" + (1 - newVolume) * 100 + "%)"
      v.aplayer.volume(newVolume, true); // 更改音量
  }
}, { passive: true });

// 进度条监听器
var music_progressbar = document.getElementById("music-progressbar"); //扩大热区
var p_bar_bg = document.getElementById("p_bar_bg");
var p_bar = document.getElementById("p_bar");
var p_low = document.getElementById("progress-low-btn");
var p_high = document.getElementById("progress-high-btn");
var p_bar_Len_New = 0;
var p_bar_bg_Len = p_bar_bg.offsetWidth; // 获取进度条总长Width
var ctrl_flag = 1;
var mousemove_flag = 1;

// 按键按下
music_progressbar.addEventListener("mousedown", function (e) { //添加监听事件
  p_bar_bg.style.height = "0.8rem";
  p_bar.style.backgroundColor = "var(--dis-f-0)";
  p_low.style.color = "var(--dis-f-0)";
  p_high.style.color = "var(--dis-f-0)";
  ctrl_flag = 0;
  global_music_flag = 1;
  let x = e.clientX; // 获取按下时鼠标初始位置 // pageX是绝对位置 offsetX是相对位置
  let p_bar_Len = p_bar.getBoundingClientRect().right - p_bar_bg.getBoundingClientRect().left; // 获取进度条的初始Width
  p_bar_bg_Len = p_bar_bg.offsetWidth; // 获取进度条总长Width，不知道为什么，第一次获取的值不对，这里还得再更新一次
  document.onmousemove = function (e) { // 拖动需要写到down里面
      let diff = x - e.clientX; // 获取移动的距离
      mousemove_flag = 0;
      p_bar_Len_New = p_bar_Len - diff; // 计算当前进度条的Width
      if (p_bar_Len_New < 0) { // 当超出进度条范围，控制
          p_bar_Len_New = 0;
      } else if (p_bar_Len_New > p_bar_bg_Len) {
          p_bar_Len_New = p_bar_bg_Len;
      }
      p_bar.style.transform = "translateX(-" + (1 - (p_bar_Len_New / p_bar_bg_Len)) * 100 + "%)"; // 更改进度条Width
      let all_Time = document.querySelector(".global-music").aplayer.audio.duration;
      let current_time = (p_bar_Len_New / p_bar_bg_Len) * all_Time;
      document.getElementById("progress-low-btn").innerHTML = tools.secToTime(current_time);
  }
});

// 触摸按下
music_progressbar.addEventListener("touchstart", function (e) { //添加监听事件
  p_bar_bg.style.height = "0.8rem";
  p_bar.style.backgroundColor = "var(--dis-f-0)";
  p_low.style.color = "var(--dis-f-0)";
  p_high.style.color = "var(--dis-f-0)";
  ctrl_flag = 0;
  global_music_flag = 1;
  let x = e.targetTouches[0].pageX; // 获取按下时鼠标初始位置 // pageX是绝对位置 offsetX是相对位置
  let p_bar_Len = p_bar.getBoundingClientRect().right - p_bar_bg.getBoundingClientRect().left; // 获取进度条的初始Width
  p_bar_bg_Len = p_bar_bg.offsetWidth; // 获取进度条总长Width，不知道为什么，第一次获取的值不对，这里还得再更新一次
  document.ontouchmove = function (e) { // 拖动需要写到down里面
      let diff = x - e.targetTouches[0].pageX; // 获取移动的距离
      mousemove_flag = 0;
      p_bar_Len_New = p_bar_Len - diff; // 计算当前进度条的Width
      if (p_bar_Len_New < 0) { // 当超出进度条范围，控制
          p_bar_Len_New = 0;
      } else if (p_bar_Len_New > p_bar_bg_Len) {
          p_bar_Len_New = p_bar_bg_Len;
      }
      p_bar.style.transform = "translateX(-" + (1 - (p_bar_Len_New / p_bar_bg_Len)) * 100 + "%)"; // 更改进度条Width
      let all_Time = document.querySelector(".global-music").aplayer.audio.duration;
      let current_time = (p_bar_Len_New / p_bar_bg_Len) * all_Time;
      document.getElementById("progress-low-btn").innerHTML = tools.secToTime(current_time);
  }
}, { passive: true });

// 按键抬起
document.onmouseup = function () { //当鼠标弹起的时候，不做任何操作
  v_bar_bg.style.height = "0.4rem";
  v_bar.style.backgroundColor = "var(--font-color)";
  v_low.style.color = "var(--font-color)";
  v_high.style.color = "var(--font-color)";
  p_bar_bg.style.height = "0.4rem";
  p_bar.style.backgroundColor = "var(--font-color)";
  p_low.style.color = "var(--font-color)";
  p_high.style.color = "var(--font-color)";
  if (ctrl_flag == 0 && mousemove_flag == 0) {
      let all_Time = document.querySelector(".global-music").aplayer.audio.duration;
      let new_Time = (p_bar_Len_New / p_bar_bg_Len) * all_Time;
      document.querySelector(".global-music").aplayer.seek(new_Time); //更改进度
  }
  global_music_flag = 0;
  ctrl_flag = 1;
  mousemove_flag = 1;
  document.onmousemove = null;
};

// 触摸抬起
document.ontouchend = function () {
  v_bar_bg.style.height = "0.4rem";
  v_bar.style.backgroundColor = "var(--font-color)";
  v_low.style.color = "var(--font-color)";
  v_high.style.color = "var(--font-color)";
  p_bar_bg.style.height = "0.4rem";
  p_bar.style.backgroundColor = "var(--font-color)";
  p_low.style.color = "var(--font-color)";
  p_high.style.color = "var(--font-color)";
  if (ctrl_flag == 0 && mousemove_flag == 0) {
      let all_Time = document.querySelector(".global-music").aplayer.audio.duration;
      let new_Time = (p_bar_Len_New / p_bar_bg_Len) * all_Time;
      document.querySelector(".global-music").aplayer.seek(new_Time); //更改进度
  }
  global_music_flag = 0;
  ctrl_flag = 1;
  mousemove_flag = 1;
  document.ontouchmove = null;
};