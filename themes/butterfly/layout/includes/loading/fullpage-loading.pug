#loading-box(onclick='document.getElementById("loading-box").classList.add("loaded")')
  .loading-bg
    .loading-img
    .loading-image-dot

script.
  // 防抖函数封装
  function debounce(func, delay) {
    let timer = null;
    return function() {
      const context = this;
      const args = arguments;
      clearTimeout(timer);
      timer = setTimeout(() => {
        func.apply(context, args);
      }, delay);
    };
  }

  const preloader = {
    endLoading: () => {
      try {
        document.body.style.overflow = 'auto';
        const loadingBox = document.getElementById('loading-box');
        if (loadingBox) {
          loadingBox.classList.add("loaded");
        }
      } catch (error) {
        console.error('End loading error:', error);
      }
    },
    initLoading: () => {
      try {
        document.body.style.overflow = '';
        const loadingBox = document.getElementById('loading-box');
        if (loadingBox) {
          loadingBox.classList.remove("loaded");
        }
        } catch (error) {
          console.error('Init loading error:', error);
        }
      }
    };

    // 对 window.load 事件添加防抖处理
    const debouncedEndLoading = debounce(preloader.endLoading, 300);
    window.addEventListener('load', debouncedEndLoading);

    // 根据配置决定是否添加 pjax 事件监听器
    const pjaxEnabled = false; // 这里替换为 {theme.pjax && theme.pjax.enable} 的实际值
    if (pjaxEnabled) {
      const debouncedInitLoading = debounce(preloader.initLoading, 300);
      const debouncedPjaxComplete = debounce(preloader.endLoading, 300);
      document.addEventListener('pjax:send', debouncedInitLoading);
      document.addEventListener('pjax:complete', debouncedPjaxComplete);
    }
