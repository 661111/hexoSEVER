script(type='text/javascript')
  | // 注册 Service Worker 的函数
  | function registerServiceWorker() {
  |   if ('serviceWorker' in navigator) {
  |     window.addEventListener('load', () => {
  |       navigator.serviceWorker.register('/service-worker.js')
  |        .then((registration) => {
  |           console.log('ServiceWorker registration successful with scope: ', registration.scope);
  |         })
  |        .catch((err) => {
  |           console.error('ServiceWorker registration failed: ', err);
  |         });
  |     });
  |   }
  | }
  | 
  | // 向 Service Worker 发送消息并监听响应的函数
  | function sendMessageToServiceWorker() {
  |   if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {
  |     try {
  |       // 发送更新指令到 Service Worker
  |       // 'update' 改为 'refresh' 即可触发缓存刷新
  |       navigator.serviceWorker.controller.postMessage('update');
  |       console.log('已向 Service Worker 发送 update 消息');
  | 
  |       // 监听 Service Worker 发送的消息
  |       navigator.serviceWorker.addEventListener('message', (event) => {
  |         const data = event.data;
  |         if (data && data.type) {
  |           switch (data.type) {
  |             case 'update':
  |               // 这里写更新后的操作
  |               console.log('收到 update 消息，执行更新后的操作');
  |               break;
  |             case 'refresh':
  |               // 这里写强刷缓存后的操作
  |               console.log('收到 refresh 消息，执行强刷缓存后的操作');
  |               break;
  |             default:
  |               console.error(`未知事件：${data.type}`);
  |           }
  |         } else {
  |           console.error('收到的消息缺少 type 属性', data);
  |         }
  |       });
  |     } catch (error) {
  |       console.error('向 Service Worker 发送消息时出错', error);
  |     }
  |   }
  | }
  | 
  | // 调用注册和发送消息的函数
  | registerServiceWorker();
  | sendMessageToServiceWorker();
script(type='text/javascript')
  | /* switchDarkMode JS */
  | function switchDarkMode() { // Switch Between Light And Dark Mode
  |   const nowMode = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light';
  |   if (nowMode === 'light') {
  |     activateDarkMode();
  |     saveToLocal.set('theme', 'dark', 2);
  |     GLOBAL_CONFIG.Snackbar!== undefined && btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night);
  |   } else {
  |     activateLightMode();
  |     saveToLocal.set('theme', 'light', 2);
  |     GLOBAL_CONFIG.Snackbar!== undefined && btf.snackbarShow(GLOBAL_CONFIG.Snackbar.night_to_day);
  |   }
  |   // handle some cases
  |   typeof utterancesTheme === 'function' && utterancesTheme();
  |   typeof FB === 'object' && window.loadFBComment();
  |   window.DISQUS && document.getElementById('disqus_thread').children.length && setTimeout(() => window.disqusReset(), 200);
  | }   
script(type='text/javascript')
  | 
  | // 节流阀
  | var percentFlag = false;
  | 
  | function essayScroll() {
  |   let a = document.documentElement.scrollTop || window.pageYOffset; // 卷去高度
  |   const waterfallResult = a % document.documentElement.clientHeight; // 卷去一个视口
  |   // 修正：将未定义的 result 改为 waterfallResult
  |   waterfallResult <= 99 || (waterfallResult = 99);
  | 
  |   if (
  |     !percentFlag &&
  |     waterfallResult + 100 >= document.documentElement.clientHeight &&
  |     document.querySelector("#waterfall")
  |   ) {
  |     // console.info(waterfallResult, document.documentElement.clientHeight);
  |     setTimeout(() => {
  |       waterfall("#waterfall");
  |     }, 500);
  |   } else {
  |     setTimeout(() => {
  |       document.querySelector("#waterfall") && waterfall("#waterfall");
  |     }, 500);
  |   }
  | 
  |   const r = window.scrollY + document.documentElement.clientHeight;
  |   let p = document.getElementById("post-comment") || document.getElementById("footer");
  | 
  |   (p.offsetTop + p.offsetHeight / 2 < r || 90 < waterfallResult) && (percentFlag = true);
  | }
  | 
  | function replaceAll(e, n, t) {
  |   return e.split(n).join(t);
  | }
  | 
  | var anzhiyu = {
  |   diffDate: function (d, more = false) {
  |     const dateNow = new Date();
  |     const datePost = new Date(d);
  |     const dateDiff = dateNow.getTime() - datePost.getTime();
  |     const minute = 1000 * 60;
  |     const hour = minute * 60;
  |     const day = hour * 24;
  |     const month = day * 30;
  | 
  |     let result;
  |     if (more) {
  |       const monthCount = dateDiff / month;
  |       const dayCount = dateDiff / day;
  |       const hourCount = dateDiff / hour;
  |       const minuteCount = dateDiff / minute;
  | 
  |       if (monthCount >= 1) {
  |         result = datePost.toLocaleDateString().replace(/\//g, "-");
  |       } else if (dayCount >= 1) {
  |         result = parseInt(dayCount) + " " + GLOBAL_CONFIG.date_suffix.day;
  |       } else if (hourCount >= 1) {
  |         result = parseInt(hourCount) + " " + GLOBAL_CONFIG.date_suffix.hour;
  |       } else if (minuteCount >= 1) {
  |         result = parseInt(minuteCount) + " " + GLOBAL_CONFIG.date_suffix.min;
  |       } else {
  |         result = GLOBAL_CONFIG.date_suffix.just;
  |       }
  |     } else {
  |       result = parseInt(dateDiff / day);
  |     }
  |     return result;
  |   },
  |   changeTimeInEssay: function () {
  |     document.querySelector("#bber") &&
  |       document.querySelectorAll("#bber time").forEach(function (e) {
  |         var t = e;
  |         var datetime = t.getAttribute("datetime");
  |         t.innerText = anzhiyu.diffDate(datetime, true);
  |         t.style.display = "inline";
  |       });
  |   },
  |   reflashEssayWaterFall: function () {
  |     document.querySelector("#waterfall") &&
  |       setTimeout(function () {
  |         waterfall("#waterfall");
  |         document.getElementById("waterfall").classList.add("show");
  |       }, 500);
  |   },
  |   commentText: function (e) {
  |     if (e == "undefined" || e == "null") e = "好棒！";
  |     var n = document.getElementsByClassName("el-textarea__inner")[0];
  |     var t = document.createEvent("HTMLEvents");
  |     if (!n) return;
  |     t.initEvent("input", true, true);
  |     var o = replaceAll(e, "\n", "\n> ");
  |     n.value = "> " + o + "\n\n";
  |     n.dispatchEvent(t);
  |     var i = document.querySelector("#post-comment").offsetTop;
  |     window.scrollTo(0, i - 80);
  |     n.focus();
  |     n.setSelectionRange(-1, -1);
  |     document.getElementById("comment-tips") && document.getElementById("comment-tips").classList.add("show");
  |   }
  | };
  | 
  | anzhiyu.changeTimeInEssay();
  | anzhiyu.reflashEssayWaterFall();
script(type='text/javascript')
  | async function loadModuleBasedOnCondition() {
  |   const condition = true;
  |   try {
  |     if (condition) {
  |       const moduleA = await import('/js/main.js');
  |       if (typeof moduleA.doSomething === 'function') {
  |         moduleA.doSomething();
  |       } else {
  |         console.error('main 中不存在 doSomething 方法');
  |       }
  |     } else {
  |       const moduleB = await import('/js/utils.js');
  |       if (typeof moduleB.doSomethingElse === 'function') {
  |         moduleB.doSomethingElse();
  |       } else {
  |         console.error('utils 中不存在 doSomethingElse 方法');
  |       }
  |     }
  |   } catch (error) {
  |     console.error('模块加载失败:', error);
  |   }
  | }
  | 
  | loadModuleBasedOnCondition();